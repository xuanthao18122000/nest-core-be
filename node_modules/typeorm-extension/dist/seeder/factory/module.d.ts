import type { SaveOptions } from 'typeorm';
import type { SeederFactoryContext } from './type';
export declare class SeederFactory<O extends Record<string, any>, Meta = unknown> {
    readonly context: SeederFactoryContext<O, Meta>;
    meta: Meta | undefined;
    constructor(context: SeederFactoryContext<O, Meta>);
    setMeta(value: Meta): this;
    make(params?: Partial<O>, save?: boolean): Promise<O>;
    save(params?: Partial<O>, options?: SaveOptions): Promise<O>;
    saveMany(amount: number, params?: Partial<O>, options?: SaveOptions): Promise<O[]>;
    private resolve;
}
