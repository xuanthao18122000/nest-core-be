import type { ParseInput, ParseOutput } from 'rapiq';
import type { ObjectLiteral, SelectQueryBuilder } from 'typeorm';
import type { QueryApplyOptions, QueryApplyOutput } from './type';
export declare function applyQueryParseOutput<T extends ObjectLiteral = ObjectLiteral>(query: SelectQueryBuilder<T>, context: ParseOutput): ParseOutput;
export declare function applyQuery<T extends ObjectLiteral = ObjectLiteral>(query: SelectQueryBuilder<T>, input: ParseInput, options?: QueryApplyOptions<T>): QueryApplyOutput;
