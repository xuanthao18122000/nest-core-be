import type { SortParseOutput } from 'rapiq';
import type { ObjectLiteral, SelectQueryBuilder } from 'typeorm';
import type { QuerySortApplyOptions, QuerySortApplyOutput } from './type';
/**
 * Apply parsed sort parameter data on the db query.
 *
 * @param query
 * @param data
 */
export declare function applyQuerySortParseOutput<T extends ObjectLiteral = ObjectLiteral>(query: SelectQueryBuilder<T>, data: SortParseOutput): QuerySortApplyOutput;
/**
 * Apply raw sort parameter data on the db query.
 *
 * @param query
 * @param data
 * @param options
 */
export declare function applyQuerySort<T extends ObjectLiteral = ObjectLiteral>(query: SelectQueryBuilder<T>, data: unknown, options?: QuerySortApplyOptions<T>): SortParseOutput;
/**
 * Apply raw sort parameter data on the db query.
 *
 * @param query
 * @param data
 * @param options
 */
export declare function applySort<T extends ObjectLiteral = ObjectLiteral>(query: SelectQueryBuilder<T>, data: unknown, options?: QuerySortApplyOptions<T>): SortParseOutput;
