"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.readTsConfig = void 0;
const path_1 = __importDefault(require("path"));
async function readTsConfig(directory) {
    directory = directory || process.cwd();
    directory = path_1.default.isAbsolute(directory) ? directory : path_1.default.join(process.cwd(), directory);
    const filePath = directory.indexOf('.json') === -1 ?
        path_1.default.join(directory, 'tsconfig.json') :
        directory;
    try {
        const tsConfig = await (_a = filePath, Promise.resolve().then(() => __importStar(require(_a))));
        // todo: maybe follow extends chain ;)
        if (typeof tsConfig === 'object') {
            return tsConfig;
        }
    }
    catch (e) {
        // don't do anything ;)
    }
    return {};
}
exports.readTsConfig = readTsConfig;
