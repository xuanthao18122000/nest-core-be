"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dropOracleDatabase = exports.createOracleDatabase = exports.createSimpleOracleConnection = void 0;
const errors_1 = require("../../errors");
const utils_1 = require("./utils");
const utils_2 = require("../utils");
function createSimpleOracleConnection(driver, options) {
    const { getConnection } = driver.oracle;
    if (!options.connectString) {
        let address = '(PROTOCOL=TCP)';
        if (options.host) {
            address += `(HOST=${options.host})`;
        }
        if (options.port) {
            address += `(PORT=${options.port})`;
        }
        let connectData = '(SERVER=DEDICATED)';
        if (options.sid) {
            connectData += `(SID=${options.sid})`;
        }
        if (options.serviceName) {
            connectData += `(SERVICE_NAME=${options.serviceName})`;
        }
        options.connectString = `(DESCRIPTION=(ADDRESS=${address})(CONNECT_DATA=${connectData}))`;
    }
    return getConnection({
        user: options.user,
        password: options.password,
        connectString: options.connectString || options.url,
        ...(options.extra ? options.extra : {}),
    });
}
exports.createSimpleOracleConnection = createSimpleOracleConnection;
async function createOracleDatabase(context) {
    context = await (0, utils_2.buildDatabaseCreateContext)(context);
    if (!context.options) {
        throw errors_1.OptionsError.undeterminable();
    }
    const options = (0, utils_1.buildDriverOptions)(context.options);
    const driver = (0, utils_1.createDriver)(context.options);
    const connection = createSimpleOracleConnection(driver, options);
    /**
     * @link https://github.com/typeorm/typeorm/blob/master/src/driver/oracle/OracleQueryRunner.ts#L295
     */
    const query = `CREATE DATABASE IF NOT EXISTS ${options.database}`;
    const result = await connection.execute(query);
    if (context.synchronize) {
        await (0, utils_2.setupDatabaseSchema)(context.options);
    }
    return result;
}
exports.createOracleDatabase = createOracleDatabase;
async function dropOracleDatabase(_context) {
    /**
     * @link https://github.com/typeorm/typeorm/blob/master/src/driver/oracle/OracleQueryRunner.ts#L295
     */
    return Promise.resolve();
}
exports.dropOracleDatabase = dropOracleDatabase;
