"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dropCockroachDBDatabase = exports.createCockroachDBDatabase = exports.executeSimpleCockroachDBQuery = void 0;
const errors_1 = require("../../errors");
const postgres_1 = require("./postgres");
const utils_1 = require("./utils");
const utils_2 = require("../utils");
async function executeSimpleCockroachDBQuery(connection, query, endConnection = true) {
    return new Promise(((resolve, reject) => {
        connection.query(query, (queryErr, queryResult) => {
            if (endConnection) {
                connection.end();
            }
            if (queryErr) {
                reject(queryErr);
            }
            resolve(queryResult);
        });
    }));
}
exports.executeSimpleCockroachDBQuery = executeSimpleCockroachDBQuery;
async function createCockroachDBDatabase(context) {
    context = await (0, utils_2.buildDatabaseCreateContext)(context);
    if (!context.options) {
        throw errors_1.OptionsError.undeterminable();
    }
    const options = (0, utils_1.buildDriverOptions)(context.options);
    const driver = (0, utils_1.createDriver)(context.options);
    const connection = await (0, postgres_1.createSimplePostgresConnection)(driver, options, context);
    /**
     * @link https://github.com/typeorm/typeorm/blob/master/src/driver/cockroachdb/CockroachQueryRunner.ts#L347
     */
    const query = `CREATE DATABASE ${context.ifNotExist ? 'IF NOT EXISTS ' : ''} "${options.database}"`;
    const result = await executeSimpleCockroachDBQuery(connection, query);
    if (context.synchronize) {
        await (0, utils_2.setupDatabaseSchema)(context.options);
    }
    return result;
}
exports.createCockroachDBDatabase = createCockroachDBDatabase;
async function dropCockroachDBDatabase(context) {
    context = await (0, utils_2.buildDatabaseDropContext)(context);
    if (!context.options) {
        throw errors_1.OptionsError.undeterminable();
    }
    const options = (0, utils_1.buildDriverOptions)(context.options);
    const driver = (0, utils_1.createDriver)(context.options);
    const connection = await (0, postgres_1.createSimplePostgresConnection)(driver, options, context);
    /**
     * @link https://github.com/typeorm/typeorm/blob/master/src/driver/cockroachdb/CockroachQueryRunner.ts#L356
     */
    const query = `DROP DATABASE ${context.ifExist ? 'IF EXISTS ' : ''} "${options.database}"`;
    return executeSimpleCockroachDBQuery(connection, query);
}
exports.dropCockroachDBDatabase = dropCockroachDBDatabase;
