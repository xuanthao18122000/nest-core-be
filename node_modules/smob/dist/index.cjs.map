{"version":3,"file":"index.cjs","sources":["../src/utils/array.ts","../src/utils/has-own-property.ts","../src/utils/check.ts","../src/utils/cut.ts","../src/utils/options.ts","../src/module.ts"],"sourcesContent":["/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function mergeArrays(\n    first: any[],\n    second: any[],\n    arrayDistinct: boolean,\n) {\n    if (arrayDistinct) {\n        return [...new Set(first.concat(second))];\n    }\n\n    return first.concat(second);\n}\n","/*\n * Copyright (c) 2021.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { hasOwnProperty } from './has-own-property';\n\nexport function isObject(item: unknown) : item is Record<string, any> {\n    return (\n        !!item &&\n        typeof item === 'object' &&\n        !Array.isArray(item)\n    );\n}\n\nexport function isObjectDeeperThan(value: unknown, depth: number) {\n    if (depth <= 0) {\n        return isObject(value);\n    }\n\n    if (typeof value !== 'object') {\n        return false;\n    }\n\n    const nextDepth = depth - 1;\n    const keys = Object.keys(value);\n    for (let i = 0; i < keys.length; i++) {\n        if (\n            hasOwnProperty(value, keys[i]) &&\n            isObjectDeeperThan(value[keys[i]], nextDepth)\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isSafeObject(object: Record<string, any>) : boolean {\n    try {\n        JSON.stringify(object);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function isSafeKey(key: string) : boolean {\n    return key !== '__proto__' &&\n        key !== 'prototype' &&\n        key !== 'constructor';\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isObject } from './check';\n\nexport function cutObject<T extends Record<string, any>>(input: T, depth: number) : T {\n    if (depth < 0) {\n        return {} as T;\n    }\n\n    const value = { ...input };\n    const keys : (keyof T)[] = Object.keys(value);\n\n    for (let i = 0; i < keys.length; i++) {\n        if (isObject(value[keys[i]])) {\n            if (depth === 0) {\n                value[keys[i]] = {} as T[keyof T];\n            } else {\n                value[keys[i]] = cutObject(value[keys[i]], depth - 1);\n            }\n        }\n    }\n\n    return value;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { Options } from '../type';\n\nexport function buildOptions(options?: Partial<Options>) {\n    options = options || {};\n\n    options.array = options.array ?? true;\n    options.arrayDistinct = options.arrayDistinct ?? false;\n    options.priority = options.priority || 'left';\n\n    return options as Options;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { Merger, MergerResult, Options } from './type';\nimport {\n    buildOptions,\n    hasOwnProperty,\n    isObject,\n    isSafeKey,\n    isSafeObject,\n    mergeArrays,\n} from './utils';\n\nexport function baseMerger<A extends Record<string, any>, B extends Record<string, any>>(\n    options: Options,\n    target: A,\n    ...sources: B[]\n) : MergerResult<A, B> {\n    if (!sources.length) return target as MergerResult<A, B>;\n\n    const source = sources.shift();\n\n    if (\n        isObject(target) &&\n        isObject(source)\n    ) {\n        const keys = Object.keys(source);\n        for (let i = 0; i < keys.length; i++) {\n            const key : string = keys[i];\n\n            if (!isSafeKey(key)) {\n                continue;\n            }\n\n            if (hasOwnProperty(target, key)) {\n                if (options.strategy) {\n                    const applied = options.strategy(target, key, source[key]);\n                    if (typeof applied !== 'undefined') {\n                        continue;\n                    }\n                }\n\n                if (!isSafeObject(source[key])) {\n                    continue;\n                }\n\n                if (\n                    isObject(target[key]) &&\n                    isObject(source[key])\n                ) {\n                    baseMerger(options, target[key], source[key]);\n\n                    continue;\n                }\n\n                if (\n                    options.array &&\n                    Array.isArray(target[key]) &&\n                    Array.isArray(source[key])\n                ) {\n                    switch (options.priority) {\n                        case 'left':\n                            Object.assign(target, {\n                                [key]: mergeArrays(target[key], source[key], options.arrayDistinct),\n                            });\n                            break;\n                        case 'right':\n                            Object.assign(target, {\n                                [key]: mergeArrays(source[key], target[key], options.arrayDistinct),\n                            });\n                            break;\n                    }\n\n                    continue;\n                }\n\n                if (options.priority === 'right') {\n                    Object.assign(target, { [key]: source[key] });\n                }\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return baseMerger(options, target, ...sources);\n}\n\nexport function createMerger(input?: Partial<Options>) : Merger {\n    const options = buildOptions(input);\n\n    return <A extends Record<string, any>, B extends Record<string, any>>(\n        target: A,\n        ...sources: B[]\n    ) => baseMerger(options, target, ...sources);\n}\n\nexport const merge = createMerger();\n"],"names":["mergeArrays","first","second","arrayDistinct","Set","concat","hasOwnProperty","obj","prop","Object","prototype","call","isObject","item","Array","isArray","isSafeObject","object","JSON","stringify","e","isSafeKey","key","_extends","buildOptions","options","array","priority","baseMerger","target","sources","length","source","shift","keys","i","strategy","assign","createMerger","input","merge","cutObject","depth","value","isObjectDeeperThan","nextDepth"],"mappings":"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"}