{"version":3,"file":"index.cjs","sources":["../src/utils/has-own-property.ts","../src/utils/options.ts","../src/utils/message.ts","../src/module.ts","../src/check.ts"],"sourcesContent":["/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function hasOwnProperty<X extends Record<string, any>, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*\n * Copyright (c) 2021-2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { merge } from 'smob';\nimport { Options } from '../type';\n\n/**\n * Deep merge two objects.\n * @param target\n * @param sources\n */\nexport function mergeOptions(\n    target: Options,\n    ...sources: Options[]\n) : Options {\n    return merge(target, ...sources);\n}\n\nexport function buildOptions(\n    data?: string | Error | Options,\n    options?: Options,\n) : Options {\n    if (typeof data === 'undefined') {\n        data = {};\n    }\n\n    if (typeof options === 'undefined') {\n        options = {};\n    }\n\n    if (\n        !(data instanceof Error) &&\n        typeof data !== 'string'\n    ) {\n        options = mergeOptions({}, data, { ...options });\n    }\n\n    if (\n        !options.previous &&\n        data instanceof Error\n    ) {\n        options.previous = data;\n    }\n\n    return options;\n}\n","/*\n * Copyright (c) 2022-2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { Options } from '../type';\n\nexport function buildMessage(\n    data?: string | Error | Options,\n    options?: Options,\n) : string | undefined {\n    if (typeof data === 'undefined') {\n        data = {};\n    }\n\n    if (typeof options === 'undefined') {\n        options = {};\n    }\n\n    let message : string | undefined;\n\n    if (typeof data === 'string') {\n        message = data;\n    }\n\n    if (\n        !message &&\n        options.message\n    ) {\n        message = options.message;\n    }\n\n    if (\n        !message &&\n        !options.decorateMessage\n    ) {\n        if (data instanceof Error) {\n            /* istanbul ignore next */\n            message = data.message;\n        } else if (options.previous instanceof Error) {\n            message = options.previous.message;\n        }\n    }\n\n    return message;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { Options } from './type';\nimport { buildMessage, buildOptions, hasOwnProperty } from './utils';\n\nexport class BaseError extends Error {\n    public readonly options: Options;\n\n    //--------------------------------------------------------------------\n\n    constructor(\n        data?: string | Error | Options,\n        options?: Options,\n    ) {\n        options = buildOptions(data, options);\n        const message = buildMessage(data, options);\n\n        super(message);\n\n        if (this.name === undefined || this.name === 'Error') {\n            Object.defineProperty(this, 'name', {\n                configurable: true,\n                enumerable: false,\n                value: this.constructor.name,\n                writable: true,\n            });\n        }\n\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n\n        /* istanbul ignore next */\n        if (typeof this.stack === 'undefined' || this.stack === '') {\n            this.stack = new Error(message).stack;\n        }\n\n        this.options = {};\n        this.setOptions(options);\n    }\n\n    //--------------------------------------------------------------------\n\n    public getOptions(): Options {\n        return this.options;\n    }\n\n    public getOption<T extends keyof Options>(key: T): Options[T] | undefined {\n        return this.options[key];\n    }\n\n    //--------------------------------------------------------------------\n\n    setOptions(options?: Options): void {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n\n        const keys = Object.keys(options);\n        for (let i = 0; i < keys.length; i++) {\n            this.setOption(keys[i], options[keys[i]]);\n        }\n    }\n\n    public setOption<T extends keyof Options>(key: T, value: Options[T]) {\n        Object.assign(this.options, { [key]: value });\n    }\n\n    public unsetOption<T extends keyof Options>(key: T) {\n        if (hasOwnProperty(this.options, key)) {\n            delete this.options[key];\n        }\n    }\n}\n","/*\n * Copyright (c) 2022-2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { BaseError } from './module';\nimport { hasOwnProperty } from './utils';\n\nfunction isObject(item: unknown) : item is Record<string, any> {\n    return (!!item && typeof item === 'object' && !Array.isArray(item));\n}\n\nfunction isFunction(item: unknown) : item is CallableFunction {\n    return typeof item === 'function';\n}\n\nexport function extendsBaseError<T extends BaseError = BaseError>(error: unknown) : error is T {\n    if (error instanceof BaseError) {\n        return true;\n    }\n\n    return !!(isObject(error) &&\n        hasOwnProperty(error, 'options') &&\n        isObject(error.options) &&\n        isFunction(error.getOption) &&\n        isFunction(error.getOptions));\n}\n"],"names":["hasOwnProperty","obj","prop","Object","prototype","call","mergeOptions","target","sources","merge","buildOptions","data","options","Error","previous","buildMessage","message","decorateMessage","BaseError","getOptions","getOption","key","setOptions","keys","i","length","setOption","value","assign","unsetOption","constructor","name","undefined","defineProperty","configurable","enumerable","writable","captureStackTrace","stack","isObject","item","Array","isArray","isFunction","extendsBaseError","error"],"mappings":"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"}