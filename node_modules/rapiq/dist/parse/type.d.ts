import { Parameter, URLParameter } from '../constants';
import { ObjectLiteral } from '../type';
import { ParseParameterOptions, ParseParameterOutput } from './parameter';
export type ParseInput = {
    [K in `${Parameter}` | `${URLParameter}`]?: unknown;
};
export type ParseOptions<T extends ObjectLiteral = ObjectLiteral> = {
    [P in `${Parameter}`]?: boolean | ParseParameterOptions<P, T>;
} & {
    defaultPath?: string;
};
export type ParseOutput = {
    [K in `${Parameter}`]?: ParseParameterOutput<K>;
} & {
    defaultPath?: string;
};
//# sourceMappingURL=type.d.ts.map