export declare function hasOwnProperty<X extends Record<string, any>, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown>;
type Options = {
    transformer?: (input: unknown, output: Record<string, any>, key: string) => boolean | undefined;
};
export declare function flattenNestedObject(data: Record<string, any>, options?: Options, prefixParts?: string[]): Record<string, any>;
export {};
//# sourceMappingURL=object.d.ts.map